<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xue.erp.datasource.mappers.DepotHeadMapperEx">

    <resultMap extends="com.xue.erp.datasource.mappers.DepotHeadMapper.BaseResultMap" id="ResultMapEx" type="com.xue.erp.datasource.vo.DepotHeadVo4List">
        <result column="ProjectName" jdbcType="VARCHAR" property="projectName" />
        <result column="OrganName" jdbcType="VARCHAR" property="organName" />
        <result column="HandsPersonName" jdbcType="VARCHAR" property="handsPersonName" />
        <result column="AccountName" jdbcType="VARCHAR" property="accountName" />
        <result column="AllocationProjectName" jdbcType="VARCHAR" property="allocationProjectName" />
    </resultMap>

    <resultMap id="ResultWithInfoExMap" type="com.xue.erp.datasource.vo.DepotHeadVo4InDetail">
        <result column="Number" jdbcType="VARCHAR" property="Number" />
        <result column="MName" jdbcType="VARCHAR" property="MName" />
        <result column="Model" jdbcType="VARCHAR" property="Model" />
        <result column="UnitPrice" jdbcType="DECIMAL" property="UnitPrice" />
        <result column="OperNumber" jdbcType="DECIMAL" property="OperNumber" />
        <result column="AllPrice" jdbcType="DECIMAL" property="AllPrice" />
        <result column="SName" jdbcType="VARCHAR" property="SName" />
        <result column="DName" jdbcType="VARCHAR" property="DName" />
        <result column="OperTime" jdbcType="VARCHAR" property="OperTime" />
        <result column="NewType" jdbcType="VARCHAR" property="NewType" />
    </resultMap>

    <resultMap id="ResultInOutMaterialCount" type="com.xue.erp.datasource.vo.DepotHeadVo4InOutMCount">
        <result column="MaterialId" jdbcType="BIGINT" property="MaterialId" />
        <result column="mName" jdbcType="VARCHAR" property="mName" />
        <result column="Model" jdbcType="VARCHAR" property="Model" />
        <result column="categoryName" jdbcType="VARCHAR" property="categoryName" />
        <result column="numSum" jdbcType="DECIMAL" property="numSum" />
        <result column="priceSum" jdbcType="DECIMAL" property="priceSum" />
    </resultMap>

    <resultMap id="ResultStatementAccount" type="com.xue.erp.datasource.vo.DepotHeadVo4StatementAccount">
        <result column="Number" jdbcType="VARCHAR" property="number" />
        <result column="type" jdbcType="VARCHAR" property="type" />
        <result column="DiscountLastMoney" jdbcType="DECIMAL" property="discountLastMoney" />
        <result column="ChangeAmount" jdbcType="DECIMAL" property="changeAmount" />
        <result column="supplierName" jdbcType="VARCHAR" property="supplierName" />
        <result column="oTime" jdbcType="VARCHAR" property="oTime" />
    </resultMap>

    <select id="selectByConditionDepotHead" parameterType="com.xue.erp.datasource.entities.DepotHeadExample" resultMap="ResultMapEx">
        select dh.*, d.name ProjectName, s.supplier OrganName, p.name HandsPersonName, a.name AccountName, dd.name AllocationProjectName
        from depothead dh
        left join depot d on dh.ProjectId=d.id
        left join supplier s on dh.OrganId=s.id
        left join person p on dh.HandsPersonId=p.id
        left join account a on dh.AccountId=a.id
        left join depot dd on dh.AllocationProjectId=dd.id
        where 1=1
        <if test="type != null">
            and dh.Type='${type}'
        </if>
        <if test="subType != null">
            and dh.SubType='${subType}'
        </if>
        <if test="number != null">
            and dh.Number like '%${number}%'
        </if>
        <if test="dhIds != null">
            and dh.Id in (${dhIds})
        </if>
        <if test="beginTime != null">
            and dh.OperTime >= (${beginTime})
        </if>
        <if test="endTime != null">
            and dh.OperTime &lt;= (${endTime})
        </if>
        order by dh.Id desc
        <if test="offset != null and rows != null">
            limit #{offset},#{rows}
        </if>
    </select>
    <select id="countsByDepotHead" resultType="java.lang.Long">
        SELECT
        COUNT(id)
        FROM depothead
        WHERE 1=1
        <if test="type != null">
            and Type='${type}'
        </if>
        <if test="subType != null">
            and SubType='${subType}'
        </if>
        <if test="number != null">
            and Number like '%${number}%'
        </if>
        <if test="dhIds != null">
            and Id in (${dhIds})
        </if>
        <if test="beginTime != null">
            and OperTime >= (${beginTime})
        </if>
        <if test="endTime != null">
            and OperTime &lt;= (${endTime})
        </if>
    </select>

    <select id="getMaxId" resultType="java.lang.Long">
        select max(Id) as Id from depothead
    </select>

    <select id="findMaterialsListByHeaderId" resultType="java.lang.String">
        select group_concat(concat(material.`Name`,' ',material.Model)) as mName from depotitem inner join material
        on depotitem.MaterialId = material.Id where depotitem.HeaderId = ${id}
    </select>

    <select id="findByAll" parameterType="com.xue.erp.datasource.entities.DepotItemExample" resultMap="ResultWithInfoExMap">
        select dh.Number,m.`name` MName,m.Model,di.UnitPrice,di.OperNumber,di.AllPrice,s.supplier SName,d.dName DName,
        date_format(dh.OperTime, '%Y-%m-%d') OperTime, concat(dh.SubType,dh.Type) as NewType
        from depothead dh inner join depotitem di on di.HeaderId=dh.id
        inner join material m on m.id=di.MaterialId
        inner join supplier s on s.id=dh.OrganId
        inner join (select id,name as dName from depot) d on d.id=di.DepotId
        where dh.OperTime >='${beginTime}' and dh.OperTime &lt;='${endTime}'
        <if test="oId != null">
            and dh.OrganId = ${oId}
        </if>
        <if test="pid != null">
            and di.DepotId = ${pid}
        </if>
        <if test="pid == null">
            and di.DepotId in (${dids})
        </if>
        <if test="type != null">
            and dh.Type='${type}'
        </if>
        ORDER BY OperTime DESC,Number desc
        <if test="offset != null and rows != null">
            limit #{offset},#{rows}
        </if>
    </select>

    <select id="findByAllCount" resultType="java.lang.Integer">
        select count(1)
        from depothead dh inner join depotitem di on di.HeaderId=dh.id
        inner join material m on m.id=di.MaterialId
        inner join supplier s on s.id=dh.OrganId
        inner join (select id,name as dName from depot) d on d.id=di.DepotId
        where dh.OperTime >='${beginTime}' and dh.OperTime &lt;='${endTime}'
        <if test="oId != null">
            and dh.OrganId = ${oId}
        </if>
        <if test="pid != null">
            and di.DepotId = ${pid}
        </if>
        <if test="pid == null">
            and di.DepotId in (${dids})
        </if>
        <if test="type != null">
            and dh.Type='${type}'
        </if>
        ORDER BY OperTime DESC,Number desc
    </select>

    <select id="findInOutMaterialCount" parameterType="com.xue.erp.datasource.entities.DepotItemExample" resultMap="ResultInOutMaterialCount">
        select di.MaterialId, m.mName,m.Model,m.categoryName,

        (select sum(jdi.BasicNumber) numSum from depothead jdh INNER JOIN depotitem jdi
        on jdh.id=jdi.HeaderId where jdi.MaterialId=di.MaterialId
        and jdh.type='${type}' and jdh.OperTime >='${beginTime}' and jdh.OperTime &lt;='${endTime}'
        <if test="oId != null">
            and jdh.OrganId = ${oId}
        </if>
        <if test="pid != null">
            and jdi.DepotId= ${pid}
        </if>
        <if test="pid == null">
            and jdi.DepotId in (${dids})
        </if>
        ) numSum,

        (select sum(jdi.AllPrice) priceSum from depothead jdh INNER JOIN depotitem jdi
        on jdh.id=jdi.HeaderId where jdi.MaterialId=di.MaterialId
        and jdh.type='${type}' and jdh.OperTime >='${beginTime}' and jdh.OperTime &lt;='${endTime}'
        <if test="oId != null">
            and jdh.OrganId = ${oId}
        </if>
        <if test="pid != null">
            and jdi.DepotId= ${pid}
        </if>
        <if test="pid == null">
            and jdi.DepotId in (${dids})
        </if>
        ) priceSum
        from depothead dh INNER JOIN depotitem di on dh.id=di.HeaderId
        INNER JOIN (SELECT material.id,material.name mName, Model,materialcategory.`Name` categoryName
        from material INNER JOIN materialcategory on material.CategoryId=materialcategory.Id) m
        on m.Id=di.MaterialId where dh.type='${type}' and dh.OperTime >='${beginTime}' and dh.OperTime &lt;='${endTime}'
        <if test="oId != null">
            and dh.OrganId = ${oId}
        </if>
        <if test="pid != null">
            and di.DepotId= ${pid}
        </if>
        <if test="pid == null">
            and di.DepotId in (${dids})
        </if>
        GROUP BY di.MaterialId,m.mName,m.Model,m.categoryName
        <if test="offset != null and rows != null">
            limit #{offset},#{rows}
        </if>
    </select>

    <select id="findInOutMaterialCountTotal" resultType="java.lang.Integer">
        select count(1) from
        (select di.MaterialId, m.mName,m.Model,m.categoryName from depothead dh INNER JOIN depotitem di on dh.id=di.HeaderId
        INNER JOIN (SELECT material.id,material.name mName, Model,materialcategory.`Name` categoryName
        from material INNER JOIN materialcategory on material.CategoryId=materialcategory.Id) m
        on m.Id=di.MaterialId where dh.type='${type}' and dh.OperTime >='${beginTime}' and dh.OperTime &lt;='${endTime}'
        <if test="oId != null">
            and dh.OrganId = ${oId}
        </if>
        <if test="pid != null">
            and di.DepotId= ${pid}
        </if>
        <if test="pid == null">
            and di.DepotId in (${dids})
        </if>
        GROUP BY di.MaterialId,m.mName,m.Model,m.categoryName) a
    </select>

    <select id="findStatementAccount" parameterType="com.xue.erp.datasource.entities.DepotItemExample" resultMap="ResultStatementAccount">
        select dh.Number,concat(dh.SubType,dh.Type) as type,dh.DiscountLastMoney,dh.ChangeAmount,s.supplier supplierName,
        date_format(dh.OperTime,'%Y-%m-%d %H:%i:%S') as oTime from depothead dh
        inner join supplier s on s.id=dh.OrganId where s.type='${supType}' and (dh.SubType!='其它' and dh.SubType!='采购订单' and dh.SubType!='销售订单')
        and dh.OperTime >='${beginTime}' and dh.OperTime &lt;='${endTime}'
        <if test="organId != null">
            and dh.OrganId=${organId}
        </if>
        UNION ALL
        select ah.BillNo Number,ah.Type as newType,ah.TotalPrice DiscountLastMoney,ah.ChangeAmount,s.supplier supplierName,
        date_format(ah.BillTime,'%Y-%m-%d %H:%i:%S') as oTime from accounthead ah
        inner join supplier s on s.id=ah.OrganId where s.type='${supType}'
        and ah.BillTime >='${beginTime}' and ah.BillTime &lt;='${endTime}'
        <if test="organId != null">
            and ah.OrganId=${organId}
        </if>
        ORDER BY oTime
        <if test="offset != null and rows != null">
            limit #{offset},#{rows}
        </if>
    </select>

    <select id="findStatementAccountCount" resultType="java.lang.Integer">
        select sum(a) from
        (
            select count(1) a from depothead dh
            inner join supplier s on s.id=dh.OrganId where s.type='${supType}' and (dh.SubType!='其它' and dh.SubType!='采购订单' and dh.SubType!='销售订单')
            and dh.OperTime >='${beginTime}' and dh.OperTime &lt;='${endTime}'
            <if test="organId != null">
                and dh.OrganId=${organId}
            </if>
            UNION ALL
            select count(1) a from accounthead ah
            inner join supplier s on s.id=ah.OrganId where s.type='${supType}'
            and ah.BillTime >='${beginTime}' and ah.BillTime &lt;='${endTime}'
            <if test="organId != null">
                and ah.OrganId=${organId}
            </if>
        ) cc
    </select>

    <select id="findAllMoney" resultType="java.math.BigDecimal">
        select sum(${modeName}) as allMoney from depothead where Type='${type}' and SubType = '${subType}'
        and OrganId =${supplierId} and OperTime &lt;='${endTime}'
    </select>

    <select id="getDetailByNumber" parameterType="com.xue.erp.datasource.entities.DepotHeadExample" resultMap="ResultMapEx">
        select dh.*, d.name ProjectName, s.supplier OrganName, p.name HandsPersonName, a.name AccountName, dd.name AllocationProjectName
        from depothead dh
        left join depot d on dh.ProjectId=d.id
        left join supplier s on dh.OrganId=s.id
        left join person p on dh.HandsPersonId=p.id
        left join account a on dh.AccountId=a.id
        left join depot dd on dh.AllocationProjectId=dd.id
        where 1=1
        <if test="number != null">
            and dh.Number='${number}'
        </if>
    </select>

    <insert id="adddepotHead" parameterType="com.xue.erp.datasource.entities.DepotHead"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into depothead (Type, SubType,
        ProjectId, DefaultNumber, Number,
        OperPersonName, CreateTime, OperTime,
        OrganId, HandsPersonId, AccountId,
        ChangeAmount, AllocationProjectId, TotalPrice,
        PayType, Remark, Salesman,
        AccountIdList, AccountMoneyList, Discount,
        DiscountMoney, DiscountLastMoney, OtherMoney,
        OtherMoneyList, OtherMoneyItem, AccountDay,
        Status)
        values (#{type,jdbcType=VARCHAR}, #{subtype,jdbcType=VARCHAR},
        #{projectid,jdbcType=BIGINT}, #{defaultnumber,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR},
        #{operpersonname,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{opertime,jdbcType=TIMESTAMP},
        #{organid,jdbcType=BIGINT}, #{handspersonid,jdbcType=BIGINT}, #{accountid,jdbcType=BIGINT},
        #{changeamount,jdbcType=DECIMAL}, #{allocationprojectid,jdbcType=BIGINT}, #{totalprice,jdbcType=DECIMAL},
        #{paytype,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{salesman,jdbcType=VARCHAR},
        #{accountidlist,jdbcType=VARCHAR}, #{accountmoneylist,jdbcType=VARCHAR}, #{discount,jdbcType=DECIMAL},
        #{discountmoney,jdbcType=DECIMAL}, #{discountlastmoney,jdbcType=DECIMAL}, #{othermoney,jdbcType=DECIMAL},
        #{othermoneylist,jdbcType=VARCHAR}, #{othermoneyitem,jdbcType=VARCHAR}, #{accountday,jdbcType=INTEGER},
        #{status,jdbcType=BIT})
    </insert>
    <update id="updatedepotHead" parameterType="com.xue.erp.datasource.entities.DepotHead">
        update depothead
        <set>
            <if test="type != null">
                Type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="subtype != null">
                SubType = #{subtype,jdbcType=VARCHAR},
            </if>
            <if test="projectid != null">
                ProjectId = #{projectid,jdbcType=BIGINT},
            </if>
            <if test="defaultnumber != null">
                DefaultNumber = #{defaultnumber,jdbcType=VARCHAR},
            </if>
            <if test="number != null">
                Number = #{number,jdbcType=VARCHAR},
            </if>
            <if test="operpersonname != null">
                OperPersonName = #{operpersonname,jdbcType=VARCHAR},
            </if>
            <if test="opertime != null">
                OperTime = #{opertime,jdbcType=TIMESTAMP},
            </if>
            <if test="organid != null">
                OrganId = #{organid,jdbcType=BIGINT},
            </if>
            <if test="handspersonid != null">
                HandsPersonId = #{handspersonid,jdbcType=BIGINT},
            </if>
            <if test="accountid != null">
                AccountId = #{accountid,jdbcType=BIGINT},
            </if>
            <if test="changeamount != null">
                ChangeAmount = #{changeamount,jdbcType=DECIMAL},
            </if>
            <if test="allocationprojectid != null">
                AllocationProjectId = #{allocationprojectid,jdbcType=BIGINT},
            </if>
            <if test="totalprice != null">
                TotalPrice = #{totalprice,jdbcType=DECIMAL},
            </if>
            <if test="paytype != null">
                PayType = #{paytype,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                Remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="salesman != null">
                Salesman = #{salesman,jdbcType=VARCHAR},
            </if>
            <if test="accountidlist != null">
                AccountIdList = #{accountidlist,jdbcType=VARCHAR},
            </if>
            <if test="accountmoneylist != null">
                AccountMoneyList = #{accountmoneylist,jdbcType=VARCHAR},
            </if>
            <if test="discount != null">
                Discount = #{discount,jdbcType=DECIMAL},
            </if>
            <if test="discountmoney != null">
                DiscountMoney = #{discountmoney,jdbcType=DECIMAL},
            </if>
            <if test="discountlastmoney != null">
                DiscountLastMoney = #{discountlastmoney,jdbcType=DECIMAL},
            </if>
            <if test="othermoney != null">
                OtherMoney = #{othermoney,jdbcType=DECIMAL},
            </if>
            <if test="othermoneylist != null">
                OtherMoneyList = #{othermoneylist,jdbcType=VARCHAR},
            </if>
            <if test="othermoneyitem != null">
                OtherMoneyItem = #{othermoneyitem,jdbcType=VARCHAR},
            </if>
            <if test="accountday != null">
                AccountDay = #{accountday,jdbcType=INTEGER},
            </if>
            <if test="status != null">
                Status = #{status,jdbcType=BIT},
            </if>
        </set>
        where Id = #{id,jdbcType=BIGINT}
    </update>
    <select id="getBuildOnlyNumber" resultType="java.lang.Long">
      select _nextval(#{seq_name}) from dual;
    </select>

</mapper>